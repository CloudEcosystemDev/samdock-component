{
    "openapi": "3.0.0",
    "info": {
        "title": "contacts",
        "description": "contacts Microservice",
        "version": "0.1.0",
        "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        },
        "schemas": {
            "PersonAddress": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "description": "The street name of the address (string:alpha)"
                    },
                    "number": {
                        "type": "string",
                        "description": "The house number (two digits and char)"
                    },
                    "postcode": {
                        "type": "string",
                        "description": "The post code consisting of 5 digits"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city name (string:alpha)"
                    },
                    "country": {
                        "type": "string",
                        "description": "The name of the country (string:alpha)"
                    }
                }
            },
            "Person": {
                "type": "object",
                "properties": {
                    "_tenantID": {
                        "type": "string",
                        "description": "the related tenant"
                    },
                    "_id": {
                        "type": "string",
                        "description": "The ID of the person"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email of the person"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the person"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the person"
                    },
                    "gender": {
                        "type": "string",
                        "description": "The gender of the person"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The prefix of the person`s name"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The suffix of the person`s name"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "The phone number of the person"
                    },
                    "mobileNumber": {
                        "type": "string",
                        "description": "The mobile phone number of the person"
                    },
                    "privateNumber": {
                        "type": "string",
                        "description": "The private phone number of the person"
                    },
                    "officeNumber": {
                        "type": "string",
                        "description": "The office phone number of the person"
                    },
                    "homeNumber": {
                        "type": "string",
                        "description": "The home phone number of the person"
                    },
                    "faxNumber": {
                        "type": "string",
                        "description": "The fax number of the person"
                    },
                    "website": {
                        "type": "string",
                        "description": "The website of the person"
                    },
                    "linkedin": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "xing": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "facebook": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "twitter": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "instagram": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "The birthday of the person"
                    },
                    "lastActivity": {
                        "type": "number",
                        "description": "The created at timestamp of the person"
                    },
                    "importID": {
                        "type": "string",
                        "description": "Import id"
                    },
                    "address": {
                        "description": "The address of the person",
                        "allOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "street": {
                                        "type": "string",
                                        "description": "The street name of the address (string:alpha)"
                                    },
                                    "number": {
                                        "type": "string",
                                        "description": "The house number (two digits and char)"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "description": "The post code consisting of 5 digits"
                                    },
                                    "city": {
                                        "type": "string",
                                        "description": "The city name (string:alpha)"
                                    },
                                    "country": {
                                        "type": "string",
                                        "description": "The name of the country (string:alpha)"
                                    }
                                }
                            }
                        ]
                    },
                    "employers": {
                        "description": "The organizations the person is working for",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deals": {
                        "description": "The deal relations of the person",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "consents": {
                        "description": "The doi consents of the person",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customFields": {
                        "type": "object",
                        "description": "Custom fields for each person"
                    },
                    "integrations": {
                        "type": "object",
                        "description": "Integrations info of the person"
                    }
                },
                "required": [
                    "_tenantID",
                    "_id",
                    "lastName",
                    "gender",
                    "namePrefix",
                    "nameSuffix"
                ]
            },
            "PersonDTO": {
                "type": "object",
                "properties": {}
            },
            "OrganizationAddress": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "description": "The street name of the address (string:alpha)"
                    },
                    "number": {
                        "type": "string",
                        "description": "The house number (two digits and char)"
                    },
                    "postcode": {
                        "type": "string",
                        "description": "The post code consisting of 5 digits"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city name (string:alpha)"
                    },
                    "country": {
                        "type": "string",
                        "description": "The name of the country (string:alpha)"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "_tenantID": {
                        "type": "string",
                        "description": "the related tenant"
                    },
                    "_id": {
                        "type": "string",
                        "description": "The ID of the organization"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email of the organization"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the organization"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "The phone number of the organization"
                    },
                    "faxNumber": {
                        "type": "string",
                        "description": "The fax number of the person"
                    },
                    "linkedin": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "xing": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "facebook": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "twitter": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "instagram": {
                        "type": "string",
                        "description": "The social media links of the person"
                    },
                    "vatRegNo": {
                        "type": "string",
                        "description": "The Umsatzsteuer ID / VAT Reg No of the organization"
                    },
                    "website": {
                        "type": "string",
                        "description": "The website of the organization"
                    },
                    "logo": {
                        "type": "string",
                        "description": "The logo of the organization"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The created at timestamp of the organization"
                    },
                    "importID": {
                        "type": "string",
                        "description": "Import id"
                    },
                    "address": {
                        "description": "The address of the organization",
                        "allOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "street": {
                                        "type": "string",
                                        "description": "The street name of the address (string:alpha)"
                                    },
                                    "number": {
                                        "type": "string",
                                        "description": "The house number (two digits and char)"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "description": "The post code consisting of 5 digits"
                                    },
                                    "city": {
                                        "type": "string",
                                        "description": "The city name (string:alpha)"
                                    },
                                    "country": {
                                        "type": "string",
                                        "description": "The name of the country (string:alpha)"
                                    }
                                }
                            }
                        ]
                    },
                    "branches": {
                        "description": "The branches of the organization",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "employees": {
                        "description": "The employees of the organization",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deals": {
                        "description": "The deals related to the organization",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contactPerson": {
                        "type": "string",
                        "description": "The main contact person of the organization"
                    },
                    "customFields": {
                        "type": "object",
                        "description": "Custom fields for each organization"
                    },
                    "isCustomer": {
                        "type": "boolean",
                        "description": "Customer status of the organization"
                    },
                    "integrations": {
                        "type": "object",
                        "description": "Integrations info of the organzaion"
                    }
                },
                "required": [
                    "_tenantID",
                    "_id",
                    "name"
                ]
            },
            "OrganizationDTO": {
                "type": "object",
                "properties": {}
            },
            "OrganizationBranchDTO": {
                "type": "object",
                "properties": {}
            },
            "RelatePersonToOrgDto": {
                "type": "object",
                "properties": {}
            },
            "ContactDraft": {
                "type": "object",
                "properties": {
                    "_tenantID": {
                        "type": "string",
                        "description": "the related tenant"
                    },
                    "_id": {
                        "type": "string",
                        "description": "The ID of the contact draft"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the contact draft"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the contact draft"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email of the person of draft"
                    },
                    "gender": {
                        "type": "string",
                        "description": "The gender of the person of draft"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "The nameSuffix of the person of draft"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "The namePrefix of the person of draft"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "The birthday of the person of draft"
                    },
                    "street": {
                        "type": "string",
                        "description": "The street of the person of contact draft"
                    },
                    "number": {
                        "type": "string",
                        "description": "The number of the person of contact draft"
                    },
                    "postcode": {
                        "type": "string",
                        "description": "The postcode of the person of contact draft"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the person of contact draft"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "The phone number of the person of contact draft"
                    },
                    "mobileNumber": {
                        "type": "string",
                        "description": "The mobile number of the person of contact draft"
                    },
                    "officeNumber": {
                        "type": "string",
                        "description": "The office number of the person of contact draft"
                    },
                    "homeNumber": {
                        "type": "string",
                        "description": "The home number of the person of contact draft"
                    },
                    "privateNumber": {
                        "type": "string",
                        "description": "The private number of the person of contact draft"
                    },
                    "faxNumber": {
                        "type": "string",
                        "description": "The fax number of the person of contact draft"
                    },
                    "instagram": {
                        "type": "string",
                        "description": "The instagram of the person of contact draft"
                    },
                    "linkedin": {
                        "type": "string",
                        "description": "The linkedin of the person of contact draft"
                    },
                    "facebook": {
                        "type": "string",
                        "description": "The facebook of the person of contact draft"
                    },
                    "twitter": {
                        "type": "string",
                        "description": "The twitter of the person of contact draft"
                    },
                    "xing": {
                        "type": "string",
                        "description": "The xing of the person of contact draft"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "The company name of the contact draft"
                    },
                    "companyEmail": {
                        "type": "string",
                        "description": "The companyEmail name of the contact draft"
                    },
                    "companyTaxID": {
                        "type": "string",
                        "description": "The tax id of the organization of the contact draft"
                    },
                    "companyStreet": {
                        "type": "string",
                        "description": "The street of the organization of contact draft"
                    },
                    "companyNumber": {
                        "type": "string",
                        "description": "The number of the organization of contact draft"
                    },
                    "companyPostcode": {
                        "type": "string",
                        "description": "The postcode of the organization of contact draft"
                    },
                    "companyCity": {
                        "type": "string",
                        "description": "The city of the organization of contact draft"
                    },
                    "companyPhoneNumber": {
                        "type": "string",
                        "description": "The phone number name of the organization of the contact draft"
                    },
                    "companyFaxNumber": {
                        "type": "string",
                        "description": "The fax number name of the organization of the contact draft"
                    },
                    "companyWebsite": {
                        "type": "string",
                        "description": "The website of the organization of the contact draft"
                    },
                    "companyInstagram": {
                        "type": "string",
                        "description": "The Instagram of the organization of the contact draft"
                    },
                    "companyLinkedin": {
                        "type": "string",
                        "description": "The Linkedin of the organization of the contact draft"
                    },
                    "companyFacebook": {
                        "type": "string",
                        "description": "The Facebook of the organization of the contact draft"
                    },
                    "companyTwitter": {
                        "type": "string",
                        "description": "The Twitter of the organization of the contact draft"
                    },
                    "companyXing": {
                        "type": "string",
                        "description": "The Xing of the organization of the contact draft"
                    },
                    "leadRequirements": {
                        "type": "string",
                        "description": "free text field for lead requirements"
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the contact draft"
                    },
                    "createdAt": {
                        "type": "number",
                        "description": "The created at timestamp of the draft"
                    },
                    "verifiedAt": {
                        "type": "number",
                        "description": "The verified at timestamp of the draft"
                    },
                    "createLead": {
                        "type": "boolean",
                        "description": "Whether the verification of the draft should create a lead"
                    },
                    "editor": {
                        "type": "string",
                        "description": "the default editor that will be assigned to the draft"
                    },
                    "consent": {
                        "type": "object",
                        "description": "doi consent of the draft"
                    },
                    "customFields": {
                        "description": "Custom fields of the draft should add to person or organization if created",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "_tenantID",
                    "_id"
                ]
            },
            "ContactDraftDTO": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "the id of the contact draft",
                        "default": "pIdeHJDpzFe6AAuCA72OH"
                    },
                    "email": {
                        "type": "string",
                        "description": "the email of the person in the draft if present",
                        "default": "test@daypaio.app"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the person in the draft if present",
                        "default": "Anthony"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the person in the draft if present",
                        "default": "Flannigon"
                    },
                    "birthday": {
                        "type": "object",
                        "description": "the birthday of the person in the draft",
                        "default": "2011-12-21"
                    },
                    "gender": {
                        "type": "string",
                        "description": "the address of the contact draft",
                        "default": "male"
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "the address of the contact draft",
                        "default": "Dr."
                    },
                    "nameSuffix": {
                        "type": "string",
                        "description": "the address of the contact draft",
                        "default": "?"
                    },
                    "website": {
                        "type": "string",
                        "description": "the address of the contact draft",
                        "default": "www.de"
                    },
                    "street": {
                        "type": "string",
                        "description": "the address of the contact draft",
                        "default": "Walter-Gropius-Strasse"
                    },
                    "number": {
                        "type": "string",
                        "description": "the number of the contact draft",
                        "default": "17"
                    },
                    "postcode": {
                        "type": "string",
                        "description": "The post code of the contact draft",
                        "default": "80808"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the contact draft",
                        "default": "Munich"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "+431111111"
                    },
                    "mobileNumber": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "+4322222222"
                    },
                    "officeNumber": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "+4333333333"
                    },
                    "homeNumber": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "+434444444"
                    },
                    "privateNumber": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "+4355555555"
                    },
                    "faxNumber": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "+43666666666"
                    },
                    "instagram": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "#abc"
                    },
                    "linkedin": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "#abc"
                    },
                    "facebook": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "#abc"
                    },
                    "twitter": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "#abc"
                    },
                    "xing": {
                        "type": "string",
                        "description": "phonenumber of the person in the draft",
                        "default": "#abc"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "the company name of the company present in the draft",
                        "default": "Daypaio GmbH"
                    },
                    "companyEmail": {
                        "type": "string",
                        "description": "the email of the company present in the draft",
                        "default": "info@daypaio.com"
                    },
                    "companyPhoneNumber": {
                        "type": "string",
                        "description": "the phonenumber of the company",
                        "default": "+4312345678"
                    },
                    "companyFaxNumber": {
                        "type": "string",
                        "description": "the FaxNumber of the company",
                        "default": "+4312345678"
                    },
                    "companyTaxID": {
                        "type": "string",
                        "description": "the tax ID of the company",
                        "default": "DE23423RFD"
                    },
                    "companyWebsite": {
                        "type": "string",
                        "description": "the Website of the company",
                        "default": "www.de"
                    },
                    "companyStreet": {
                        "type": "string",
                        "description": "the company address of the contact draft",
                        "default": "Walter-Gropius-Strasse"
                    },
                    "companyNumber": {
                        "type": "string",
                        "description": "the company number of the contact draft",
                        "default": "17"
                    },
                    "companyPostcode": {
                        "type": "string",
                        "description": "The company post code of the contact draft",
                        "default": "80808"
                    },
                    "companyCity": {
                        "type": "string",
                        "description": "The company city of the contact draft",
                        "default": "Munich"
                    },
                    "companyInstagram": {
                        "type": "string",
                        "description": "the Instagram of the company",
                        "default": "#cba"
                    },
                    "companyLinkedin": {
                        "type": "string",
                        "description": "the Linkedin of the company",
                        "default": "#cba"
                    },
                    "companyFacebook": {
                        "type": "string",
                        "description": "the Facebook of the company",
                        "default": "#cba"
                    },
                    "companyTwitter": {
                        "type": "string",
                        "description": "the Twitter of the company",
                        "default": "#cba"
                    },
                    "companyXing": {
                        "type": "string",
                        "description": "the Xing of the company",
                        "default": "#cba"
                    },
                    "leadRequirements": {
                        "type": "string",
                        "description": "free text field for requirements",
                        "default": "test"
                    }
                },
                "required": [
                    "_id"
                ]
            },
            "VerifyDraftDTO": {
                "type": "object",
                "properties": {
                    "createLead": {
                        "type": "boolean",
                        "description": "Whether to create a lead once the draft is verified",
                        "default": true
                    }
                },
                "required": [
                    "createLead"
                ]
            },
            "InboundSourceDTO": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "the id of the inbound source",
                        "default": "dedcngfrqiJ0pg48Zde8b"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the inbound source",
                        "enum": [
                            "disabled",
                            "active",
                            "testing"
                        ],
                        "default": "active"
                    },
                    "type": {
                        "type": "string",
                        "description": "the status of the inbound source",
                        "enum": [
                            "api",
                            "form"
                        ],
                        "default": "api"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the inbound source",
                        "default": "Form"
                    },
                    "formSettings": {
                        "type": "object",
                        "description": "the form settings of the source"
                    },
                    "createLead": {
                        "type": "boolean",
                        "description": "whether the lead should be created on the verification of drafts",
                        "default": true
                    },
                    "editor": {
                        "type": "string",
                        "description": "the id of the user to which the created lead be assigned to",
                        "default": "an id of the user"
                    },
                    "doi": {
                        "type": "object",
                        "description": "the double-opt-in settings for the inbound source"
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "type",
                    "name",
                    "createLead",
                    "editor"
                ]
            },
            "CustomFieldDTO": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "the id of the custom field",
                        "default": "e2thZPp5lT7Vfyeg_e317"
                    },
                    "_tenantID": {
                        "type": "string",
                        "description": "the id of the tenant"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the custom field"
                    },
                    "key": {
                        "type": "string",
                        "description": "the key of the custom field"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description of the custom field"
                    },
                    "type": {
                        "type": "string",
                        "description": "the type of the custom field",
                        "enum": [
                            "text",
                            "select",
                            "multiselect",
                            "currency"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the custom field",
                        "enum": [
                            "active",
                            "hidden"
                        ]
                    },
                    "createdAt": {
                        "type": "number",
                        "description": "when custom field was created"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "id of User who created custom field"
                    },
                    "updatedAt": {
                        "type": "number",
                        "description": "when custom field was updated"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "id of User who updated custom field"
                    },
                    "options": {
                        "type": "object",
                        "description": "any options of the custom field"
                    }
                },
                "required": [
                    "_id",
                    "_tenantID",
                    "name",
                    "key",
                    "type",
                    "createdAt",
                    "createdBy"
                ]
            },
            "BrowseAllDTO": {
                "type": "object",
                "properties": {
                    "persons": {
                        "description": "Array of persons custom fields",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "the id of the custom field",
                                    "default": "e2thZPp5lT7Vfyeg_e317"
                                },
                                "_tenantID": {
                                    "type": "string",
                                    "description": "the id of the tenant"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the name of the custom field"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "the key of the custom field"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of the custom field"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "the type of the custom field",
                                    "enum": [
                                        "text",
                                        "select",
                                        "multiselect",
                                        "currency"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "the status of the custom field",
                                    "enum": [
                                        "active",
                                        "hidden"
                                    ]
                                },
                                "createdAt": {
                                    "type": "number",
                                    "description": "when custom field was created"
                                },
                                "createdBy": {
                                    "type": "string",
                                    "description": "id of User who created custom field"
                                },
                                "updatedAt": {
                                    "type": "number",
                                    "description": "when custom field was updated"
                                },
                                "updatedBy": {
                                    "type": "string",
                                    "description": "id of User who updated custom field"
                                },
                                "options": {
                                    "type": "object",
                                    "description": "any options of the custom field"
                                }
                            },
                            "required": [
                                "_id",
                                "_tenantID",
                                "name",
                                "key",
                                "type",
                                "createdAt",
                                "createdBy"
                            ]
                        }
                    },
                    "organizations": {
                        "description": "Array of organizations custom fields",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "the id of the custom field",
                                    "default": "e2thZPp5lT7Vfyeg_e317"
                                },
                                "_tenantID": {
                                    "type": "string",
                                    "description": "the id of the tenant"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the name of the custom field"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "the key of the custom field"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of the custom field"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "the type of the custom field",
                                    "enum": [
                                        "text",
                                        "select",
                                        "multiselect",
                                        "currency"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "the status of the custom field",
                                    "enum": [
                                        "active",
                                        "hidden"
                                    ]
                                },
                                "createdAt": {
                                    "type": "number",
                                    "description": "when custom field was created"
                                },
                                "createdBy": {
                                    "type": "string",
                                    "description": "id of User who created custom field"
                                },
                                "updatedAt": {
                                    "type": "number",
                                    "description": "when custom field was updated"
                                },
                                "updatedBy": {
                                    "type": "string",
                                    "description": "id of User who updated custom field"
                                },
                                "options": {
                                    "type": "object",
                                    "description": "any options of the custom field"
                                }
                            },
                            "required": [
                                "_id",
                                "_tenantID",
                                "name",
                                "key",
                                "type",
                                "createdAt",
                                "createdBy"
                            ]
                        }
                    }
                },
                "required": [
                    "persons",
                    "organizations"
                ]
            },
            "ValueSetCustomFieldDTO": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "From value"
                    },
                    "to": {
                        "type": "string",
                        "description": "To value"
                    },
                    "key": {
                        "type": "string",
                        "description": "Custom field key"
                    },
                    "type": {
                        "type": "string",
                        "description": "Custom field type",
                        "enum": [
                            "select",
                            "multiselect"
                        ],
                        "default": "select"
                    }
                },
                "required": [
                    "from",
                    "to",
                    "key",
                    "type"
                ]
            },
            "AddCustomFieldDTO": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "the id of the custom field",
                        "default": "c6D_lyZAFt6kpzaIZsAi4"
                    },
                    "entity": {
                        "type": "string",
                        "description": "the entity of the custom field",
                        "enum": [
                            "person",
                            "organization"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the custom field"
                    },
                    "key": {
                        "type": "string",
                        "description": "the key of the custom field"
                    },
                    "type": {
                        "type": "string",
                        "description": "the type of the custom field",
                        "enum": [
                            "text",
                            "select",
                            "multiselect",
                            "currency"
                        ]
                    }
                },
                "required": [
                    "_id",
                    "entity",
                    "name",
                    "key",
                    "type"
                ]
            },
            "ContactViewDTO": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The id of the contact view",
                        "default": "rcYxFUQYecbqMh-Kt9SYs"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the contact view"
                    },
                    "entity": {
                        "type": "string",
                        "description": "The entity of the contact view",
                        "enum": [
                            "person",
                            "organization",
                            "all"
                        ]
                    },
                    "isShared": {
                        "type": "boolean",
                        "description": "Is this contact view shared"
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Is this contact view locked"
                    },
                    "filters": {
                        "type": "object",
                        "description": "Contact view filters"
                    },
                    "columns": {
                        "type": "object",
                        "description": "Contact view columns"
                    },
                    "_tenantID": {
                        "type": "string",
                        "description": "The id of the tenant"
                    },
                    "createdAt": {
                        "type": "number",
                        "description": "Timestamp when contact view was created"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The id of user who created contact view"
                    },
                    "updatedAt": {
                        "type": "number",
                        "description": "Timestamp when contact view was updated last time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The id of user who updated contact view last time"
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "entity",
                    "filters",
                    "columns",
                    "_tenantID",
                    "createdAt",
                    "createdBy",
                    "updatedAt",
                    "updatedBy"
                ]
            },
            "AddEditContactViewDTO": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The id of the contact view",
                        "default": "rcYxFUQYecbqMh-Kt9SYs"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the contact view"
                    },
                    "entity": {
                        "type": "string",
                        "description": "The entity of the contact view",
                        "enum": [
                            "person",
                            "organization",
                            "all"
                        ]
                    },
                    "isShared": {
                        "type": "boolean",
                        "description": "Is this contact view shared"
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Is this contact view locked"
                    },
                    "filters": {
                        "type": "object",
                        "description": "Contact view filters"
                    },
                    "columns": {
                        "type": "object",
                        "description": "Contact view columns"
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "entity",
                    "filters",
                    "columns"
                ]
            }
        }
    },
    "paths": {
        "/api/contacts/persons/last-seen": {
            "get": {
                "operationId": "PersonLastSeenController_read",
                "summary": "Read lastSeen",
                "description": "Read lastSeen persons of current user",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "LastSeen persons of current user provided"
                    }
                }
            }
        },
        "/api/contacts/persons/last-seen/{id}": {
            "patch": {
                "operationId": "PersonLastSeenController_add",
                "summary": "Add lastSeen",
                "description": "Add single lastSeen",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The lastSeen adding or editing existing event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/contacts/persons": {
            "get": {
                "operationId": "PersonsController_browse",
                "summary": "Browse Persons",
                "description": "Get all persons",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The persons have successfully been queried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_tenantID": {
                                                "type": "string",
                                                "description": "the related tenant"
                                            },
                                            "_id": {
                                                "type": "string",
                                                "description": "The ID of the person"
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "The email of the person"
                                            },
                                            "firstName": {
                                                "type": "string",
                                                "description": "The first name of the person"
                                            },
                                            "lastName": {
                                                "type": "string",
                                                "description": "The last name of the person"
                                            },
                                            "gender": {
                                                "type": "string",
                                                "description": "The gender of the person"
                                            },
                                            "namePrefix": {
                                                "type": "string",
                                                "description": "The prefix of the person`s name"
                                            },
                                            "nameSuffix": {
                                                "type": "string",
                                                "description": "The suffix of the person`s name"
                                            },
                                            "phoneNumber": {
                                                "type": "string",
                                                "description": "The phone number of the person"
                                            },
                                            "mobileNumber": {
                                                "type": "string",
                                                "description": "The mobile phone number of the person"
                                            },
                                            "privateNumber": {
                                                "type": "string",
                                                "description": "The private phone number of the person"
                                            },
                                            "officeNumber": {
                                                "type": "string",
                                                "description": "The office phone number of the person"
                                            },
                                            "homeNumber": {
                                                "type": "string",
                                                "description": "The home phone number of the person"
                                            },
                                            "faxNumber": {
                                                "type": "string",
                                                "description": "The fax number of the person"
                                            },
                                            "website": {
                                                "type": "string",
                                                "description": "The website of the person"
                                            },
                                            "linkedin": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "xing": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "facebook": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "twitter": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "instagram": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "birthday": {
                                                "type": "string",
                                                "description": "The birthday of the person"
                                            },
                                            "lastActivity": {
                                                "type": "number",
                                                "description": "The created at timestamp of the person"
                                            },
                                            "importID": {
                                                "type": "string",
                                                "description": "Import id"
                                            },
                                            "address": {
                                                "description": "The address of the person",
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "street": {
                                                                "type": "string",
                                                                "description": "The street name of the address (string:alpha)"
                                                            },
                                                            "number": {
                                                                "type": "string",
                                                                "description": "The house number (two digits and char)"
                                                            },
                                                            "postcode": {
                                                                "type": "string",
                                                                "description": "The post code consisting of 5 digits"
                                                            },
                                                            "city": {
                                                                "type": "string",
                                                                "description": "The city name (string:alpha)"
                                                            },
                                                            "country": {
                                                                "type": "string",
                                                                "description": "The name of the country (string:alpha)"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "employers": {
                                                "description": "The organizations the person is working for",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "deals": {
                                                "description": "The deal relations of the person",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "consents": {
                                                "description": "The doi consents of the person",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "customFields": {
                                                "type": "object",
                                                "description": "Custom fields for each person"
                                            },
                                            "integrations": {
                                                "type": "object",
                                                "description": "Integrations info of the person"
                                            }
                                        },
                                        "required": [
                                            "_tenantID",
                                            "_id",
                                            "lastName",
                                            "gender",
                                            "namePrefix",
                                            "nameSuffix"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "persons"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PersonsController_bulkDelete",
                "summary": "Bulk Delete Persons",
                "description": "Delete a list of persons",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The persons deleting event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "persons"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "PersonsController_add",
                "summary": "Add Person",
                "description": "Create a single person",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The person adding event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "persons"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/persons/{id}": {
            "get": {
                "operationId": "PersonsController_read",
                "summary": "Read Person",
                "description": "Get a single person",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The person has successfully been found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_tenantID": {
                                            "type": "string",
                                            "description": "the related tenant"
                                        },
                                        "_id": {
                                            "type": "string",
                                            "description": "The ID of the person"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "The email of the person"
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "description": "The first name of the person"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "description": "The last name of the person"
                                        },
                                        "gender": {
                                            "type": "string",
                                            "description": "The gender of the person"
                                        },
                                        "namePrefix": {
                                            "type": "string",
                                            "description": "The prefix of the person`s name"
                                        },
                                        "nameSuffix": {
                                            "type": "string",
                                            "description": "The suffix of the person`s name"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "description": "The phone number of the person"
                                        },
                                        "mobileNumber": {
                                            "type": "string",
                                            "description": "The mobile phone number of the person"
                                        },
                                        "privateNumber": {
                                            "type": "string",
                                            "description": "The private phone number of the person"
                                        },
                                        "officeNumber": {
                                            "type": "string",
                                            "description": "The office phone number of the person"
                                        },
                                        "homeNumber": {
                                            "type": "string",
                                            "description": "The home phone number of the person"
                                        },
                                        "faxNumber": {
                                            "type": "string",
                                            "description": "The fax number of the person"
                                        },
                                        "website": {
                                            "type": "string",
                                            "description": "The website of the person"
                                        },
                                        "linkedin": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "xing": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "facebook": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "twitter": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "instagram": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "birthday": {
                                            "type": "string",
                                            "description": "The birthday of the person"
                                        },
                                        "lastActivity": {
                                            "type": "number",
                                            "description": "The created at timestamp of the person"
                                        },
                                        "importID": {
                                            "type": "string",
                                            "description": "Import id"
                                        },
                                        "address": {
                                            "description": "The address of the person",
                                            "allOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "street": {
                                                            "type": "string",
                                                            "description": "The street name of the address (string:alpha)"
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "description": "The house number (two digits and char)"
                                                        },
                                                        "postcode": {
                                                            "type": "string",
                                                            "description": "The post code consisting of 5 digits"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "description": "The city name (string:alpha)"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "description": "The name of the country (string:alpha)"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "employers": {
                                            "description": "The organizations the person is working for",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "deals": {
                                            "description": "The deal relations of the person",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "consents": {
                                            "description": "The doi consents of the person",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "customFields": {
                                            "type": "object",
                                            "description": "Custom fields for each person"
                                        },
                                        "integrations": {
                                            "type": "object",
                                            "description": "Integrations info of the person"
                                        }
                                    },
                                    "required": [
                                        "_tenantID",
                                        "_id",
                                        "lastName",
                                        "gender",
                                        "namePrefix",
                                        "nameSuffix"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "404": {
                        "description": "The person was not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "persons"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "PersonsController_edit",
                "summary": "Edit Persons",
                "description": "Edit single person",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The person editing event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "persons"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PersonsController_delete",
                "summary": "Delete Person",
                "description": "Delete a single person",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The person deleting event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "persons"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/persons/{id}/activities": {
            "get": {
                "operationId": "PersonActivitiesController_browseActivities",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/contacts/organizations": {
            "get": {
                "operationId": "OrganizationsController_browse",
                "summary": "Browse Organizations",
                "description": "Get all organizations",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The records have successfully been queried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_tenantID": {
                                                "type": "string",
                                                "description": "the related tenant"
                                            },
                                            "_id": {
                                                "type": "string",
                                                "description": "The ID of the organization"
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "The email of the organization"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the organization"
                                            },
                                            "phoneNumber": {
                                                "type": "string",
                                                "description": "The phone number of the organization"
                                            },
                                            "faxNumber": {
                                                "type": "string",
                                                "description": "The fax number of the person"
                                            },
                                            "linkedin": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "xing": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "facebook": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "twitter": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "instagram": {
                                                "type": "string",
                                                "description": "The social media links of the person"
                                            },
                                            "vatRegNo": {
                                                "type": "string",
                                                "description": "The Umsatzsteuer ID / VAT Reg No of the organization"
                                            },
                                            "website": {
                                                "type": "string",
                                                "description": "The website of the organization"
                                            },
                                            "logo": {
                                                "type": "string",
                                                "description": "The logo of the organization"
                                            },
                                            "createdAt": {
                                                "format": "date-time",
                                                "type": "string",
                                                "description": "The created at timestamp of the organization"
                                            },
                                            "importID": {
                                                "type": "string",
                                                "description": "Import id"
                                            },
                                            "address": {
                                                "description": "The address of the organization",
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "street": {
                                                                "type": "string",
                                                                "description": "The street name of the address (string:alpha)"
                                                            },
                                                            "number": {
                                                                "type": "string",
                                                                "description": "The house number (two digits and char)"
                                                            },
                                                            "postcode": {
                                                                "type": "string",
                                                                "description": "The post code consisting of 5 digits"
                                                            },
                                                            "city": {
                                                                "type": "string",
                                                                "description": "The city name (string:alpha)"
                                                            },
                                                            "country": {
                                                                "type": "string",
                                                                "description": "The name of the country (string:alpha)"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "branches": {
                                                "description": "The branches of the organization",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "employees": {
                                                "description": "The employees of the organization",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "deals": {
                                                "description": "The deals related to the organization",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "contactPerson": {
                                                "type": "string",
                                                "description": "The main contact person of the organization"
                                            },
                                            "customFields": {
                                                "type": "object",
                                                "description": "Custom fields for each organization"
                                            },
                                            "isCustomer": {
                                                "type": "boolean",
                                                "description": "Customer status of the organization"
                                            },
                                            "integrations": {
                                                "type": "object",
                                                "description": "Integrations info of the organzaion"
                                            }
                                        },
                                        "required": [
                                            "_tenantID",
                                            "_id",
                                            "name"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "OrganizationsController_add",
                "summary": "Add Organization",
                "description": "Create an organization",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The organization adding event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "OrganizationsController_bulkDelete",
                "summary": "Bulk delete organizations",
                "description": "Delete a list of organizations",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The organizations have been deleted"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{id}": {
            "get": {
                "operationId": "OrganizationsController_read",
                "summary": "Read Organization",
                "description": "Get an organization by id",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The organization has successfully been found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_tenantID": {
                                            "type": "string",
                                            "description": "the related tenant"
                                        },
                                        "_id": {
                                            "type": "string",
                                            "description": "The ID of the organization"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "The email of the organization"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "The name of the organization"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "description": "The phone number of the organization"
                                        },
                                        "faxNumber": {
                                            "type": "string",
                                            "description": "The fax number of the person"
                                        },
                                        "linkedin": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "xing": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "facebook": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "twitter": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "instagram": {
                                            "type": "string",
                                            "description": "The social media links of the person"
                                        },
                                        "vatRegNo": {
                                            "type": "string",
                                            "description": "The Umsatzsteuer ID / VAT Reg No of the organization"
                                        },
                                        "website": {
                                            "type": "string",
                                            "description": "The website of the organization"
                                        },
                                        "logo": {
                                            "type": "string",
                                            "description": "The logo of the organization"
                                        },
                                        "createdAt": {
                                            "format": "date-time",
                                            "type": "string",
                                            "description": "The created at timestamp of the organization"
                                        },
                                        "importID": {
                                            "type": "string",
                                            "description": "Import id"
                                        },
                                        "address": {
                                            "description": "The address of the organization",
                                            "allOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "street": {
                                                            "type": "string",
                                                            "description": "The street name of the address (string:alpha)"
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "description": "The house number (two digits and char)"
                                                        },
                                                        "postcode": {
                                                            "type": "string",
                                                            "description": "The post code consisting of 5 digits"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "description": "The city name (string:alpha)"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "description": "The name of the country (string:alpha)"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "branches": {
                                            "description": "The branches of the organization",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "employees": {
                                            "description": "The employees of the organization",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "deals": {
                                            "description": "The deals related to the organization",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "contactPerson": {
                                            "type": "string",
                                            "description": "The main contact person of the organization"
                                        },
                                        "customFields": {
                                            "type": "object",
                                            "description": "Custom fields for each organization"
                                        },
                                        "isCustomer": {
                                            "type": "boolean",
                                            "description": "Customer status of the organization"
                                        },
                                        "integrations": {
                                            "type": "object",
                                            "description": "Integrations info of the organzaion"
                                        }
                                    },
                                    "required": [
                                        "_tenantID",
                                        "_id",
                                        "name"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "404": {
                        "description": "The organization was not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "OrganizationsController_edit",
                "summary": "Edit Organization",
                "description": "Edit an organization",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The organization editing event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "OrganizationsController_delete",
                "summary": "Delete Organization",
                "description": "Delete an organization",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The organization deleting event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{id}/logo": {
            "put": {
                "operationId": "OrganizationsController_changeLogo",
                "summary": "Change Tenant logo",
                "description": "Change the logo of a tenant",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The tenant logo has been changed"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "OrganizationsController_deleteLogo",
                "summary": "Delete Tenant logo",
                "description": "Delete the logo of a tenant",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The tenant logo has been deleted"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{organizationID}/branches": {
            "post": {
                "operationId": "OrganizationBranchController_addBranchToOrganization",
                "parameters": [
                    {
                        "name": "organizationID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations branches"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{organizationID}/branches/{branchID}": {
            "patch": {
                "operationId": "OrganizationBranchController_editBranchOfOrganization",
                "parameters": [
                    {
                        "name": "branchID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organizationID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations branches"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "OrganizationBranchController_deleteBranchOfOrganization",
                "parameters": [
                    {
                        "name": "branchID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organizationID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations branches"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{organizationID}/contacts": {
            "post": {
                "operationId": "OrganizationContactController_relatePersonToOrganization",
                "parameters": [
                    {
                        "name": "organizationID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations contacts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{organizationID}/contacts/{employeeID}": {
            "delete": {
                "operationId": "OrganizationContactController_unrelatePersonToOrganization",
                "parameters": [
                    {
                        "name": "organizationID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "employeeID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations contacts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{organizationID}/contacts/{personID}/assignAsContactPerson": {
            "patch": {
                "operationId": "OrganizationContactController_assignContactPerson",
                "parameters": [
                    {
                        "name": "personID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organizationID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations contacts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{organizationID}/contacts/{employeeID}/role": {
            "patch": {
                "operationId": "OrganizationContactController_changeRoleOfEmployee",
                "parameters": [
                    {
                        "name": "employeeID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organizationID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations contacts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/organizations/{id}/activities": {
            "get": {
                "operationId": "OrganizationActivitiesController_browseActivities",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations activities"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/drafts": {
            "get": {
                "operationId": "DraftsController_browse",
                "summary": "Browse all contact drafts",
                "description": "Get all contact drafts",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The contact drafts have successfully been queried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_tenantID": {
                                                "type": "string",
                                                "description": "the related tenant"
                                            },
                                            "_id": {
                                                "type": "string",
                                                "description": "The ID of the contact draft"
                                            },
                                            "firstName": {
                                                "type": "string",
                                                "description": "The first name of the contact draft"
                                            },
                                            "lastName": {
                                                "type": "string",
                                                "description": "The last name of the contact draft"
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "The email of the person of draft"
                                            },
                                            "gender": {
                                                "type": "string",
                                                "description": "The gender of the person of draft"
                                            },
                                            "nameSuffix": {
                                                "type": "string",
                                                "description": "The nameSuffix of the person of draft"
                                            },
                                            "namePrefix": {
                                                "type": "string",
                                                "description": "The namePrefix of the person of draft"
                                            },
                                            "birthday": {
                                                "type": "string",
                                                "description": "The birthday of the person of draft"
                                            },
                                            "street": {
                                                "type": "string",
                                                "description": "The street of the person of contact draft"
                                            },
                                            "number": {
                                                "type": "string",
                                                "description": "The number of the person of contact draft"
                                            },
                                            "postcode": {
                                                "type": "string",
                                                "description": "The postcode of the person of contact draft"
                                            },
                                            "city": {
                                                "type": "string",
                                                "description": "The city of the person of contact draft"
                                            },
                                            "phoneNumber": {
                                                "type": "string",
                                                "description": "The phone number of the person of contact draft"
                                            },
                                            "mobileNumber": {
                                                "type": "string",
                                                "description": "The mobile number of the person of contact draft"
                                            },
                                            "officeNumber": {
                                                "type": "string",
                                                "description": "The office number of the person of contact draft"
                                            },
                                            "homeNumber": {
                                                "type": "string",
                                                "description": "The home number of the person of contact draft"
                                            },
                                            "privateNumber": {
                                                "type": "string",
                                                "description": "The private number of the person of contact draft"
                                            },
                                            "faxNumber": {
                                                "type": "string",
                                                "description": "The fax number of the person of contact draft"
                                            },
                                            "instagram": {
                                                "type": "string",
                                                "description": "The instagram of the person of contact draft"
                                            },
                                            "linkedin": {
                                                "type": "string",
                                                "description": "The linkedin of the person of contact draft"
                                            },
                                            "facebook": {
                                                "type": "string",
                                                "description": "The facebook of the person of contact draft"
                                            },
                                            "twitter": {
                                                "type": "string",
                                                "description": "The twitter of the person of contact draft"
                                            },
                                            "xing": {
                                                "type": "string",
                                                "description": "The xing of the person of contact draft"
                                            },
                                            "companyName": {
                                                "type": "string",
                                                "description": "The company name of the contact draft"
                                            },
                                            "companyEmail": {
                                                "type": "string",
                                                "description": "The companyEmail name of the contact draft"
                                            },
                                            "companyTaxID": {
                                                "type": "string",
                                                "description": "The tax id of the organization of the contact draft"
                                            },
                                            "companyStreet": {
                                                "type": "string",
                                                "description": "The street of the organization of contact draft"
                                            },
                                            "companyNumber": {
                                                "type": "string",
                                                "description": "The number of the organization of contact draft"
                                            },
                                            "companyPostcode": {
                                                "type": "string",
                                                "description": "The postcode of the organization of contact draft"
                                            },
                                            "companyCity": {
                                                "type": "string",
                                                "description": "The city of the organization of contact draft"
                                            },
                                            "companyPhoneNumber": {
                                                "type": "string",
                                                "description": "The phone number name of the organization of the contact draft"
                                            },
                                            "companyFaxNumber": {
                                                "type": "string",
                                                "description": "The fax number name of the organization of the contact draft"
                                            },
                                            "companyWebsite": {
                                                "type": "string",
                                                "description": "The website of the organization of the contact draft"
                                            },
                                            "companyInstagram": {
                                                "type": "string",
                                                "description": "The Instagram of the organization of the contact draft"
                                            },
                                            "companyLinkedin": {
                                                "type": "string",
                                                "description": "The Linkedin of the organization of the contact draft"
                                            },
                                            "companyFacebook": {
                                                "type": "string",
                                                "description": "The Facebook of the organization of the contact draft"
                                            },
                                            "companyTwitter": {
                                                "type": "string",
                                                "description": "The Twitter of the organization of the contact draft"
                                            },
                                            "companyXing": {
                                                "type": "string",
                                                "description": "The Xing of the organization of the contact draft"
                                            },
                                            "leadRequirements": {
                                                "type": "string",
                                                "description": "free text field for lead requirements"
                                            },
                                            "source": {
                                                "type": "string",
                                                "description": "The source of the contact draft"
                                            },
                                            "createdAt": {
                                                "type": "number",
                                                "description": "The created at timestamp of the draft"
                                            },
                                            "verifiedAt": {
                                                "type": "number",
                                                "description": "The verified at timestamp of the draft"
                                            },
                                            "createLead": {
                                                "type": "boolean",
                                                "description": "Whether the verification of the draft should create a lead"
                                            },
                                            "editor": {
                                                "type": "string",
                                                "description": "the default editor that will be assigned to the draft"
                                            },
                                            "consent": {
                                                "type": "object",
                                                "description": "doi consent of the draft"
                                            },
                                            "customFields": {
                                                "description": "Custom fields of the draft should add to person or organization if created",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "required": [
                                            "_tenantID",
                                            "_id"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "drafts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/drafts/{source}": {
            "post": {
                "operationId": "DraftsController_add",
                "summary": "Add Draft",
                "description": "Create a single draft",
                "parameters": [
                    {
                        "name": "source",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "the id of the contact draft",
                                        "default": "pIdeHJDpzFe6AAuCA72OH"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "the email of the person in the draft if present",
                                        "default": "test@daypaio.app"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "description": "The first name of the person in the draft if present",
                                        "default": "Anthony"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "description": "The last name of the person in the draft if present",
                                        "default": "Flannigon"
                                    },
                                    "birthday": {
                                        "type": "object",
                                        "description": "the birthday of the person in the draft",
                                        "default": "2011-12-21"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "description": "the address of the contact draft",
                                        "default": "male"
                                    },
                                    "namePrefix": {
                                        "type": "string",
                                        "description": "the address of the contact draft",
                                        "default": "Dr."
                                    },
                                    "nameSuffix": {
                                        "type": "string",
                                        "description": "the address of the contact draft",
                                        "default": "?"
                                    },
                                    "website": {
                                        "type": "string",
                                        "description": "the address of the contact draft",
                                        "default": "www.de"
                                    },
                                    "street": {
                                        "type": "string",
                                        "description": "the address of the contact draft",
                                        "default": "Walter-Gropius-Strasse"
                                    },
                                    "number": {
                                        "type": "string",
                                        "description": "the number of the contact draft",
                                        "default": "17"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "description": "The post code of the contact draft",
                                        "default": "80808"
                                    },
                                    "city": {
                                        "type": "string",
                                        "description": "The city of the contact draft",
                                        "default": "Munich"
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "+431111111"
                                    },
                                    "mobileNumber": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "+4322222222"
                                    },
                                    "officeNumber": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "+4333333333"
                                    },
                                    "homeNumber": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "+434444444"
                                    },
                                    "privateNumber": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "+4355555555"
                                    },
                                    "faxNumber": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "+43666666666"
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "#abc"
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "#abc"
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "#abc"
                                    },
                                    "twitter": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "#abc"
                                    },
                                    "xing": {
                                        "type": "string",
                                        "description": "phonenumber of the person in the draft",
                                        "default": "#abc"
                                    },
                                    "companyName": {
                                        "type": "string",
                                        "description": "the company name of the company present in the draft",
                                        "default": "Daypaio GmbH"
                                    },
                                    "companyEmail": {
                                        "type": "string",
                                        "description": "the email of the company present in the draft",
                                        "default": "info@daypaio.com"
                                    },
                                    "companyPhoneNumber": {
                                        "type": "string",
                                        "description": "the phonenumber of the company",
                                        "default": "+4312345678"
                                    },
                                    "companyFaxNumber": {
                                        "type": "string",
                                        "description": "the FaxNumber of the company",
                                        "default": "+4312345678"
                                    },
                                    "companyTaxID": {
                                        "type": "string",
                                        "description": "the tax ID of the company",
                                        "default": "DE23423RFD"
                                    },
                                    "companyWebsite": {
                                        "type": "string",
                                        "description": "the Website of the company",
                                        "default": "www.de"
                                    },
                                    "companyStreet": {
                                        "type": "string",
                                        "description": "the company address of the contact draft",
                                        "default": "Walter-Gropius-Strasse"
                                    },
                                    "companyNumber": {
                                        "type": "string",
                                        "description": "the company number of the contact draft",
                                        "default": "17"
                                    },
                                    "companyPostcode": {
                                        "type": "string",
                                        "description": "The company post code of the contact draft",
                                        "default": "80808"
                                    },
                                    "companyCity": {
                                        "type": "string",
                                        "description": "The company city of the contact draft",
                                        "default": "Munich"
                                    },
                                    "companyInstagram": {
                                        "type": "string",
                                        "description": "the Instagram of the company",
                                        "default": "#cba"
                                    },
                                    "companyLinkedin": {
                                        "type": "string",
                                        "description": "the Linkedin of the company",
                                        "default": "#cba"
                                    },
                                    "companyFacebook": {
                                        "type": "string",
                                        "description": "the Facebook of the company",
                                        "default": "#cba"
                                    },
                                    "companyTwitter": {
                                        "type": "string",
                                        "description": "the Twitter of the company",
                                        "default": "#cba"
                                    },
                                    "companyXing": {
                                        "type": "string",
                                        "description": "the Xing of the company",
                                        "default": "#cba"
                                    },
                                    "leadRequirements": {
                                        "type": "string",
                                        "description": "free text field for requirements",
                                        "default": "test"
                                    }
                                },
                                "required": [
                                    "_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The contact draft adding event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "403": {
                        "description": "Cannot post to a disabled sorce"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "drafts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/drafts/{id}": {
            "get": {
                "operationId": "DraftsController_read",
                "summary": "Read a contact draft",
                "description": "Get a single contact draft",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contact draft has successfully been found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_tenantID": {
                                            "type": "string",
                                            "description": "the related tenant"
                                        },
                                        "_id": {
                                            "type": "string",
                                            "description": "The ID of the contact draft"
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "description": "The first name of the contact draft"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "description": "The last name of the contact draft"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "The email of the person of draft"
                                        },
                                        "gender": {
                                            "type": "string",
                                            "description": "The gender of the person of draft"
                                        },
                                        "nameSuffix": {
                                            "type": "string",
                                            "description": "The nameSuffix of the person of draft"
                                        },
                                        "namePrefix": {
                                            "type": "string",
                                            "description": "The namePrefix of the person of draft"
                                        },
                                        "birthday": {
                                            "type": "string",
                                            "description": "The birthday of the person of draft"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "The street of the person of contact draft"
                                        },
                                        "number": {
                                            "type": "string",
                                            "description": "The number of the person of contact draft"
                                        },
                                        "postcode": {
                                            "type": "string",
                                            "description": "The postcode of the person of contact draft"
                                        },
                                        "city": {
                                            "type": "string",
                                            "description": "The city of the person of contact draft"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "description": "The phone number of the person of contact draft"
                                        },
                                        "mobileNumber": {
                                            "type": "string",
                                            "description": "The mobile number of the person of contact draft"
                                        },
                                        "officeNumber": {
                                            "type": "string",
                                            "description": "The office number of the person of contact draft"
                                        },
                                        "homeNumber": {
                                            "type": "string",
                                            "description": "The home number of the person of contact draft"
                                        },
                                        "privateNumber": {
                                            "type": "string",
                                            "description": "The private number of the person of contact draft"
                                        },
                                        "faxNumber": {
                                            "type": "string",
                                            "description": "The fax number of the person of contact draft"
                                        },
                                        "instagram": {
                                            "type": "string",
                                            "description": "The instagram of the person of contact draft"
                                        },
                                        "linkedin": {
                                            "type": "string",
                                            "description": "The linkedin of the person of contact draft"
                                        },
                                        "facebook": {
                                            "type": "string",
                                            "description": "The facebook of the person of contact draft"
                                        },
                                        "twitter": {
                                            "type": "string",
                                            "description": "The twitter of the person of contact draft"
                                        },
                                        "xing": {
                                            "type": "string",
                                            "description": "The xing of the person of contact draft"
                                        },
                                        "companyName": {
                                            "type": "string",
                                            "description": "The company name of the contact draft"
                                        },
                                        "companyEmail": {
                                            "type": "string",
                                            "description": "The companyEmail name of the contact draft"
                                        },
                                        "companyTaxID": {
                                            "type": "string",
                                            "description": "The tax id of the organization of the contact draft"
                                        },
                                        "companyStreet": {
                                            "type": "string",
                                            "description": "The street of the organization of contact draft"
                                        },
                                        "companyNumber": {
                                            "type": "string",
                                            "description": "The number of the organization of contact draft"
                                        },
                                        "companyPostcode": {
                                            "type": "string",
                                            "description": "The postcode of the organization of contact draft"
                                        },
                                        "companyCity": {
                                            "type": "string",
                                            "description": "The city of the organization of contact draft"
                                        },
                                        "companyPhoneNumber": {
                                            "type": "string",
                                            "description": "The phone number name of the organization of the contact draft"
                                        },
                                        "companyFaxNumber": {
                                            "type": "string",
                                            "description": "The fax number name of the organization of the contact draft"
                                        },
                                        "companyWebsite": {
                                            "type": "string",
                                            "description": "The website of the organization of the contact draft"
                                        },
                                        "companyInstagram": {
                                            "type": "string",
                                            "description": "The Instagram of the organization of the contact draft"
                                        },
                                        "companyLinkedin": {
                                            "type": "string",
                                            "description": "The Linkedin of the organization of the contact draft"
                                        },
                                        "companyFacebook": {
                                            "type": "string",
                                            "description": "The Facebook of the organization of the contact draft"
                                        },
                                        "companyTwitter": {
                                            "type": "string",
                                            "description": "The Twitter of the organization of the contact draft"
                                        },
                                        "companyXing": {
                                            "type": "string",
                                            "description": "The Xing of the organization of the contact draft"
                                        },
                                        "leadRequirements": {
                                            "type": "string",
                                            "description": "free text field for lead requirements"
                                        },
                                        "source": {
                                            "type": "string",
                                            "description": "The source of the contact draft"
                                        },
                                        "createdAt": {
                                            "type": "number",
                                            "description": "The created at timestamp of the draft"
                                        },
                                        "verifiedAt": {
                                            "type": "number",
                                            "description": "The verified at timestamp of the draft"
                                        },
                                        "createLead": {
                                            "type": "boolean",
                                            "description": "Whether the verification of the draft should create a lead"
                                        },
                                        "editor": {
                                            "type": "string",
                                            "description": "the default editor that will be assigned to the draft"
                                        },
                                        "consent": {
                                            "type": "object",
                                            "description": "doi consent of the draft"
                                        },
                                        "customFields": {
                                            "description": "Custom fields of the draft should add to person or organization if created",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "_tenantID",
                                        "_id"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "404": {
                        "description": "The contact draft was not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "drafts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "DraftsController_delete",
                "summary": "Delete a draft",
                "description": "Delete a single draft",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The draft deleting event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "drafts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/drafts/{id}/verify": {
            "patch": {
                "operationId": "DraftsController_verify",
                "summary": "Verify a draft",
                "description": "Verify a draft",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "createLead": {
                                        "type": "boolean",
                                        "description": "Whether to create a lead once the draft is verified",
                                        "default": true
                                    }
                                },
                                "required": [
                                    "createLead"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The draft verification event has successfully been delivered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "drafts"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/inbound-sources": {
            "get": {
                "operationId": "InboundSourcesController_browse",
                "summary": "Browse Inbound sources",
                "description": "Get all inbound sources",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The records have successfully been queried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "the id of the inbound source",
                                                "default": "dedcngfrqiJ0pg48Zde8b"
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "the status of the inbound source",
                                                "enum": [
                                                    "disabled",
                                                    "active",
                                                    "testing"
                                                ],
                                                "default": "active"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "the status of the inbound source",
                                                "enum": [
                                                    "api",
                                                    "form"
                                                ],
                                                "default": "api"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "the name of the inbound source",
                                                "default": "Form"
                                            },
                                            "formSettings": {
                                                "type": "object",
                                                "description": "the form settings of the source"
                                            },
                                            "createLead": {
                                                "type": "boolean",
                                                "description": "whether the lead should be created on the verification of drafts",
                                                "default": true
                                            },
                                            "editor": {
                                                "type": "string",
                                                "description": "the id of the user to which the created lead be assigned to",
                                                "default": "an id of the user"
                                            },
                                            "doi": {
                                                "type": "object",
                                                "description": "the double-opt-in settings for the inbound source"
                                            }
                                        },
                                        "required": [
                                            "_id",
                                            "status",
                                            "type",
                                            "name",
                                            "createLead",
                                            "editor"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "inbound sources"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "InboundSourcesController_add",
                "summary": "Add InboundSource ",
                "description": "Create an organization",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "the id of the inbound source",
                                        "default": "dedcngfrqiJ0pg48Zde8b"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "the status of the inbound source",
                                        "enum": [
                                            "disabled",
                                            "active",
                                            "testing"
                                        ],
                                        "default": "active"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "the status of the inbound source",
                                        "enum": [
                                            "api",
                                            "form"
                                        ],
                                        "default": "api"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "the name of the inbound source",
                                        "default": "Form"
                                    },
                                    "formSettings": {
                                        "type": "object",
                                        "description": "the form settings of the source"
                                    },
                                    "createLead": {
                                        "type": "boolean",
                                        "description": "whether the lead should be created on the verification of drafts",
                                        "default": true
                                    },
                                    "editor": {
                                        "type": "string",
                                        "description": "the id of the user to which the created lead be assigned to",
                                        "default": "an id of the user"
                                    },
                                    "doi": {
                                        "type": "object",
                                        "description": "the double-opt-in settings for the inbound source"
                                    }
                                },
                                "required": [
                                    "_id",
                                    "status",
                                    "type",
                                    "name",
                                    "createLead",
                                    "editor"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The inbound source adding event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "403": {
                        "description": "Enum must of the correct type, active, testing or disabled"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "inbound sources"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/inbound-sources/{id}": {
            "get": {
                "operationId": "InboundSourcesController_read",
                "summary": "Read an inbound source",
                "description": "Get an inbound source by id",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The inbound source has successfully been found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "description": "the id of the inbound source",
                                            "default": "dedcngfrqiJ0pg48Zde8b"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "the status of the inbound source",
                                            "enum": [
                                                "disabled",
                                                "active",
                                                "testing"
                                            ],
                                            "default": "active"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "the status of the inbound source",
                                            "enum": [
                                                "api",
                                                "form"
                                            ],
                                            "default": "api"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "the name of the inbound source",
                                            "default": "Form"
                                        },
                                        "formSettings": {
                                            "type": "object",
                                            "description": "the form settings of the source"
                                        },
                                        "createLead": {
                                            "type": "boolean",
                                            "description": "whether the lead should be created on the verification of drafts",
                                            "default": true
                                        },
                                        "editor": {
                                            "type": "string",
                                            "description": "the id of the user to which the created lead be assigned to",
                                            "default": "an id of the user"
                                        },
                                        "doi": {
                                            "type": "object",
                                            "description": "the double-opt-in settings for the inbound source"
                                        }
                                    },
                                    "required": [
                                        "_id",
                                        "status",
                                        "type",
                                        "name",
                                        "createLead",
                                        "editor"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "404": {
                        "description": "The Inbound source was not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "inbound sources"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "InboundSourcesController_edit",
                "summary": "Edit Inbound Source",
                "description": "Edit an Inbound Source, id is not required in the body",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "the id of the inbound source",
                                        "default": "dedcngfrqiJ0pg48Zde8b"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "the status of the inbound source",
                                        "enum": [
                                            "disabled",
                                            "active",
                                            "testing"
                                        ],
                                        "default": "active"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "the status of the inbound source",
                                        "enum": [
                                            "api",
                                            "form"
                                        ],
                                        "default": "api"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "the name of the inbound source",
                                        "default": "Form"
                                    },
                                    "formSettings": {
                                        "type": "object",
                                        "description": "the form settings of the source"
                                    },
                                    "createLead": {
                                        "type": "boolean",
                                        "description": "whether the lead should be created on the verification of drafts",
                                        "default": true
                                    },
                                    "editor": {
                                        "type": "string",
                                        "description": "the id of the user to which the created lead be assigned to",
                                        "default": "an id of the user"
                                    },
                                    "doi": {
                                        "type": "object",
                                        "description": "the double-opt-in settings for the inbound source"
                                    }
                                },
                                "required": [
                                    "_id",
                                    "status",
                                    "type",
                                    "name",
                                    "createLead",
                                    "editor"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The inbound source editing event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "403": {
                        "description": "Enum must of the correct type, active, testing or disabled"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "inbound sources"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "InboundSourcesController_delete",
                "summary": "Delete an inbound source",
                "description": "Delete an inbound source",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The inbound source deleting event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "inbound sources"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/inbound-sources/{tenantID}/{id}/form.js": {
            "get": {
                "operationId": "InboundSourcesController_generateForm",
                "summary": "Get js snippet for inbound source form",
                "description": "Get js snippet for inbound source form",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tenantID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The form has successfully been generated"
                    },
                    "404": {
                        "description": "The Inbound source was not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "inbound sources"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/custom-fields": {
            "get": {
                "operationId": "CustomFieldsController_browse",
                "summary": "Browse all Custom fields",
                "description": "Get all custom fields",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The records have successfully been queried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "persons": {
                                            "description": "Array of persons custom fields",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string",
                                                        "description": "the id of the custom field",
                                                        "default": "e2thZPp5lT7Vfyeg_e317"
                                                    },
                                                    "_tenantID": {
                                                        "type": "string",
                                                        "description": "the id of the tenant"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "the name of the custom field"
                                                    },
                                                    "key": {
                                                        "type": "string",
                                                        "description": "the key of the custom field"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "the description of the custom field"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "the type of the custom field",
                                                        "enum": [
                                                            "text",
                                                            "select",
                                                            "multiselect",
                                                            "currency"
                                                        ]
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "the status of the custom field",
                                                        "enum": [
                                                            "active",
                                                            "hidden"
                                                        ]
                                                    },
                                                    "createdAt": {
                                                        "type": "number",
                                                        "description": "when custom field was created"
                                                    },
                                                    "createdBy": {
                                                        "type": "string",
                                                        "description": "id of User who created custom field"
                                                    },
                                                    "updatedAt": {
                                                        "type": "number",
                                                        "description": "when custom field was updated"
                                                    },
                                                    "updatedBy": {
                                                        "type": "string",
                                                        "description": "id of User who updated custom field"
                                                    },
                                                    "options": {
                                                        "type": "object",
                                                        "description": "any options of the custom field"
                                                    }
                                                },
                                                "required": [
                                                    "_id",
                                                    "_tenantID",
                                                    "name",
                                                    "key",
                                                    "type",
                                                    "createdAt",
                                                    "createdBy"
                                                ]
                                            }
                                        },
                                        "organizations": {
                                            "description": "Array of organizations custom fields",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string",
                                                        "description": "the id of the custom field",
                                                        "default": "e2thZPp5lT7Vfyeg_e317"
                                                    },
                                                    "_tenantID": {
                                                        "type": "string",
                                                        "description": "the id of the tenant"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "the name of the custom field"
                                                    },
                                                    "key": {
                                                        "type": "string",
                                                        "description": "the key of the custom field"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "the description of the custom field"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "the type of the custom field",
                                                        "enum": [
                                                            "text",
                                                            "select",
                                                            "multiselect",
                                                            "currency"
                                                        ]
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "the status of the custom field",
                                                        "enum": [
                                                            "active",
                                                            "hidden"
                                                        ]
                                                    },
                                                    "createdAt": {
                                                        "type": "number",
                                                        "description": "when custom field was created"
                                                    },
                                                    "createdBy": {
                                                        "type": "string",
                                                        "description": "id of User who created custom field"
                                                    },
                                                    "updatedAt": {
                                                        "type": "number",
                                                        "description": "when custom field was updated"
                                                    },
                                                    "updatedBy": {
                                                        "type": "string",
                                                        "description": "id of User who updated custom field"
                                                    },
                                                    "options": {
                                                        "type": "object",
                                                        "description": "any options of the custom field"
                                                    }
                                                },
                                                "required": [
                                                    "_id",
                                                    "_tenantID",
                                                    "name",
                                                    "key",
                                                    "type",
                                                    "createdAt",
                                                    "createdBy"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "persons",
                                        "organizations"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "custom fields"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "CustomFieldsController_add",
                "summary": "Add a Custom Field",
                "description": "Create a custom field",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "the id of the custom field",
                                        "default": "c6D_lyZAFt6kpzaIZsAi4"
                                    },
                                    "entity": {
                                        "type": "string",
                                        "description": "the entity of the custom field",
                                        "enum": [
                                            "person",
                                            "organization"
                                        ]
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "the name of the custom field"
                                    },
                                    "key": {
                                        "type": "string",
                                        "description": "the key of the custom field"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "the type of the custom field",
                                        "enum": [
                                            "text",
                                            "select",
                                            "multiselect",
                                            "currency"
                                        ]
                                    }
                                },
                                "required": [
                                    "_id",
                                    "entity",
                                    "name",
                                    "key",
                                    "type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Custom field adding event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "custom fields"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/custom-fields/{entity}": {
            "get": {
                "operationId": "CustomFieldsController_browseByEntity",
                "summary": "Browse Custom fields by entity",
                "description": "Get custom fields by entity",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "person",
                                "organization"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The records have successfully been queried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "the id of the custom field",
                                                "default": "e2thZPp5lT7Vfyeg_e317"
                                            },
                                            "_tenantID": {
                                                "type": "string",
                                                "description": "the id of the tenant"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "the name of the custom field"
                                            },
                                            "key": {
                                                "type": "string",
                                                "description": "the key of the custom field"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "the description of the custom field"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "the type of the custom field",
                                                "enum": [
                                                    "text",
                                                    "select",
                                                    "multiselect",
                                                    "currency"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "the status of the custom field",
                                                "enum": [
                                                    "active",
                                                    "hidden"
                                                ]
                                            },
                                            "createdAt": {
                                                "type": "number",
                                                "description": "when custom field was created"
                                            },
                                            "createdBy": {
                                                "type": "string",
                                                "description": "id of User who created custom field"
                                            },
                                            "updatedAt": {
                                                "type": "number",
                                                "description": "when custom field was updated"
                                            },
                                            "updatedBy": {
                                                "type": "string",
                                                "description": "id of User who updated custom field"
                                            },
                                            "options": {
                                                "type": "object",
                                                "description": "any options of the custom field"
                                            }
                                        },
                                        "required": [
                                            "_id",
                                            "_tenantID",
                                            "name",
                                            "key",
                                            "type",
                                            "createdAt",
                                            "createdBy"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "custom fields"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/custom-fields/values/{entity}/{id}": {
            "patch": {
                "operationId": "CustomFieldsController_setValue",
                "summary": "Set value of Custom Field",
                "description": "Set value of Custom Field",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "person",
                                "organization"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "from": {
                                        "type": "string",
                                        "description": "From value"
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "To value"
                                    },
                                    "key": {
                                        "type": "string",
                                        "description": "Custom field key"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Custom field type",
                                        "enum": [
                                            "select",
                                            "multiselect"
                                        ],
                                        "default": "select"
                                    }
                                },
                                "required": [
                                    "from",
                                    "to",
                                    "key",
                                    "type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The custom field set value event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "custom fields"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/custom-fields/{entity}/{id}": {
            "patch": {
                "operationId": "CustomFieldsController_edit",
                "summary": "Edit Custom Field",
                "description": "Edit an Custom Field, id is not required in the body",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "person",
                                "organization"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "the id of the custom field",
                                        "default": "e2thZPp5lT7Vfyeg_e317"
                                    },
                                    "_tenantID": {
                                        "type": "string",
                                        "description": "the id of the tenant"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "the name of the custom field"
                                    },
                                    "key": {
                                        "type": "string",
                                        "description": "the key of the custom field"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "the description of the custom field"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "the type of the custom field",
                                        "enum": [
                                            "text",
                                            "select",
                                            "multiselect",
                                            "currency"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "the status of the custom field",
                                        "enum": [
                                            "active",
                                            "hidden"
                                        ]
                                    },
                                    "createdAt": {
                                        "type": "number",
                                        "description": "when custom field was created"
                                    },
                                    "createdBy": {
                                        "type": "string",
                                        "description": "id of User who created custom field"
                                    },
                                    "updatedAt": {
                                        "type": "number",
                                        "description": "when custom field was updated"
                                    },
                                    "updatedBy": {
                                        "type": "string",
                                        "description": "id of User who updated custom field"
                                    },
                                    "options": {
                                        "type": "object",
                                        "description": "any options of the custom field"
                                    }
                                },
                                "required": [
                                    "_id",
                                    "_tenantID",
                                    "name",
                                    "key",
                                    "type",
                                    "createdAt",
                                    "createdBy"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The custom field editing event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "custom fields"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/custom-fields/{entity}/{key}/{id}": {
            "delete": {
                "operationId": "CustomFieldsController_delete",
                "summary": "Delete a custom field",
                "description": "Delete a custom field",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "person",
                                "organization"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The custom field deleting event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "custom fields"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/contact-views": {
            "get": {
                "operationId": "ContactViewsController_browse",
                "summary": "Browse Contact views",
                "description": "Get all contact views",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The records have successfully been queried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "The id of the contact view",
                                                "default": "rcYxFUQYecbqMh-Kt9SYs"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the contact view"
                                            },
                                            "entity": {
                                                "type": "string",
                                                "description": "The entity of the contact view",
                                                "enum": [
                                                    "person",
                                                    "organization",
                                                    "all"
                                                ]
                                            },
                                            "isShared": {
                                                "type": "boolean",
                                                "description": "Is this contact view shared"
                                            },
                                            "isLocked": {
                                                "type": "boolean",
                                                "description": "Is this contact view locked"
                                            },
                                            "filters": {
                                                "type": "object",
                                                "description": "Contact view filters"
                                            },
                                            "columns": {
                                                "type": "object",
                                                "description": "Contact view columns"
                                            },
                                            "_tenantID": {
                                                "type": "string",
                                                "description": "The id of the tenant"
                                            },
                                            "createdAt": {
                                                "type": "number",
                                                "description": "Timestamp when contact view was created"
                                            },
                                            "createdBy": {
                                                "type": "string",
                                                "description": "The id of user who created contact view"
                                            },
                                            "updatedAt": {
                                                "type": "number",
                                                "description": "Timestamp when contact view was updated last time"
                                            },
                                            "updatedBy": {
                                                "type": "string",
                                                "description": "The id of user who updated contact view last time"
                                            }
                                        },
                                        "required": [
                                            "_id",
                                            "name",
                                            "entity",
                                            "filters",
                                            "columns",
                                            "_tenantID",
                                            "createdAt",
                                            "createdBy",
                                            "updatedAt",
                                            "updatedBy"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "contact views"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "ContactViewsController_add",
                "summary": "Add a Contact View",
                "description": "Create a contact view",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "The id of the contact view",
                                        "default": "rcYxFUQYecbqMh-Kt9SYs"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the contact view"
                                    },
                                    "entity": {
                                        "type": "string",
                                        "description": "The entity of the contact view",
                                        "enum": [
                                            "person",
                                            "organization",
                                            "all"
                                        ]
                                    },
                                    "isShared": {
                                        "type": "boolean",
                                        "description": "Is this contact view shared"
                                    },
                                    "isLocked": {
                                        "type": "boolean",
                                        "description": "Is this contact view locked"
                                    },
                                    "filters": {
                                        "type": "object",
                                        "description": "Contact view filters"
                                    },
                                    "columns": {
                                        "type": "object",
                                        "description": "Contact view columns"
                                    }
                                },
                                "required": [
                                    "_id",
                                    "name",
                                    "entity",
                                    "filters",
                                    "columns"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Contact view adding event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "contact views"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/contact-views/{id}": {
            "get": {
                "operationId": "ContactViewsController_read",
                "summary": "Read an contact view",
                "description": "Get an contact view by id",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contact view has successfully been found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "description": "The id of the contact view",
                                            "default": "rcYxFUQYecbqMh-Kt9SYs"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "The name of the contact view"
                                        },
                                        "entity": {
                                            "type": "string",
                                            "description": "The entity of the contact view",
                                            "enum": [
                                                "person",
                                                "organization",
                                                "all"
                                            ]
                                        },
                                        "isShared": {
                                            "type": "boolean",
                                            "description": "Is this contact view shared"
                                        },
                                        "isLocked": {
                                            "type": "boolean",
                                            "description": "Is this contact view locked"
                                        },
                                        "filters": {
                                            "type": "object",
                                            "description": "Contact view filters"
                                        },
                                        "columns": {
                                            "type": "object",
                                            "description": "Contact view columns"
                                        },
                                        "_tenantID": {
                                            "type": "string",
                                            "description": "The id of the tenant"
                                        },
                                        "createdAt": {
                                            "type": "number",
                                            "description": "Timestamp when contact view was created"
                                        },
                                        "createdBy": {
                                            "type": "string",
                                            "description": "The id of user who created contact view"
                                        },
                                        "updatedAt": {
                                            "type": "number",
                                            "description": "Timestamp when contact view was updated last time"
                                        },
                                        "updatedBy": {
                                            "type": "string",
                                            "description": "The id of user who updated contact view last time"
                                        }
                                    },
                                    "required": [
                                        "_id",
                                        "name",
                                        "entity",
                                        "filters",
                                        "columns",
                                        "_tenantID",
                                        "createdAt",
                                        "createdBy",
                                        "updatedAt",
                                        "updatedBy"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "404": {
                        "description": "The contact view was not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "contact views"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "ContactViewsController_edit",
                "summary": "Edit contact view",
                "description": "Edit an contact view, id is not required in the body",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "The id of the contact view",
                                        "default": "rcYxFUQYecbqMh-Kt9SYs"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the contact view"
                                    },
                                    "entity": {
                                        "type": "string",
                                        "description": "The entity of the contact view",
                                        "enum": [
                                            "person",
                                            "organization",
                                            "all"
                                        ]
                                    },
                                    "isShared": {
                                        "type": "boolean",
                                        "description": "Is this contact view shared"
                                    },
                                    "isLocked": {
                                        "type": "boolean",
                                        "description": "Is this contact view locked"
                                    },
                                    "filters": {
                                        "type": "object",
                                        "description": "Contact view filters"
                                    },
                                    "columns": {
                                        "type": "object",
                                        "description": "Contact view columns"
                                    }
                                },
                                "required": [
                                    "_id",
                                    "name",
                                    "entity",
                                    "filters",
                                    "columns"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The contact view editing event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "contact views"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "ContactViewsController_delete",
                "summary": "Delete a contact view",
                "description": "Delete a contact view",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contact view deleting event has successfully been triggered"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "contact views"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/import/organizationsTemplate/{importID}/{lang}": {
            "get": {
                "operationId": "ImportController_getOrganizationsTemplate",
                "summary": "Get xlsx file with all persons with that import ID",
                "description": "Get all persons with that import ID",
                "parameters": [
                    {
                        "name": "importID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lang",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Persons file have successfully been queried"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "import"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/import/personsTemplate/{importID}/{lang}": {
            "get": {
                "operationId": "ImportController_getPersonsTemplate",
                "summary": "Get xlsx file with all organizations + ready for import organizations",
                "description": "Get all organizations",
                "parameters": [
                    {
                        "name": "lang",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "importID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organizations file have successfully been queried"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "import"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/import/organizationsFile/{importID}": {
            "post": {
                "operationId": "ImportController_postOrganizationsFile",
                "summary": "Upload organizations file for current import",
                "description": "Upload organizations file for current import",
                "parameters": [
                    {
                        "name": "importID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import with organizations has been created successfully"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "import"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/import/personsFile/{importID}": {
            "post": {
                "operationId": "ImportController_postPersonsFile",
                "summary": "Upload persons file for current import",
                "description": "Upload persons file for current import",
                "parameters": [
                    {
                        "name": "importID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import with persons has been created successfully"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "import"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/import/cancel/{importID}": {
            "get": {
                "operationId": "ImportController_cancelImport",
                "summary": "Cancel import",
                "description": "Cancel import",
                "parameters": [
                    {
                        "name": "importID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import was canceled successfully"
                    },
                    "401": {
                        "description": "Unauthorized error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "tags": [
                    "import"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/contacts/doi/{draftOrPersonID}/grant": {
            "get": {
                "operationId": "DoiController_grantDOI",
                "summary": "Grant DOI",
                "description": "Grant DOI",
                "parameters": [
                    {
                        "name": "draftOrPersonID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_tenantID",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "redirectUrl",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "verify",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The draft verification event has successfully been delivered"
                    }
                }
            }
        }
    }
}